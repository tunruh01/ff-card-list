{"version":3,"sources":["components/SetHeader.js","components/Card.js","components/CardList.js","components/Set.js","components/FilterControls.js","components/Results.js","components/WantTradeHeader.js","components/Collection.js","App.js","reportWebVitals.js","index.js"],"names":["SetHeader","className","this","props","setData","opus","Component","Card","card","src","image","alt","name","serial","quantities","map","quantity","index","design_type","CardList","displayed_cards","cards","forEach","card_index","push","Set","state","FilterControls","sets","rarities","cardData","set","includes","set_name","rarity","Results","sortedAndFilteredCardData","sorted_card_data","sort","a","b","localeCompare","numeric","i","length","filter","displayMode","current_playset_amount","total_amount","current_non_foil_playset_amount","handleScroll","bind","window","addEventListener","document","documentElement","scrollTop","initialScrollPos","removeEventListener","event","setScrollPos","target","scrollingElement","WantTradeHeader","headerItemClicked","mode","scroll","top","left","behavior","changeDisplay","onClick","Collection","setDisplayMode","setState","display_mode","pos","scroll_data","scroll_pos","promo_card_data","ffdecks_data","FFDecksData","collection_data","card_set_data","prevProps","prevState","snapshot","merged_data","merged_card","serial_number","playset_important","substring","row","look_serial","existing_index","findIndex","item","parseInt","Math","min","console","log","reduce","total","readRemoteFile","complete","results","data","style","height","color","loading","size","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3cd20bda.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class SetHeader extends Component {\n    render() {\n        return <div className='set-header'>{this.props.setData.opus === 'PR' ? 'Promo Exclusive' : `Opus ${this.props.setData.opus}`}</div>\n    }\n}","import React, { Component } from \"react\";\n\nexport default class Card extends Component {\n    render() {\n        let {card} = this.props;\n        return <div className='card'>\n            <img src={card.image} alt=''\n             className='card-img'/>\n            <div className='card-data'>\n                <div className='card-name'>{card.name}</div>\n                <div className='card-code'>{card.serial}</div>\n                {\n                    card.quantities.map((quantity, index) => <div key={index} className='card-quantity'>{`${quantity.design_type}: ${quantity.quantity}`}</div>)\n                }\n                {/*<div className='card-code'>{`current_playset_amount: ${card.current_playset_amount}`}</div>*/}\n                {/*<div className='card-code'>{`current_non_foil_playset_amount: ${card.current_non_foil_playset_amount}`}</div>*/}\n                {/*<div className='card-code'>{`total_amount: ${card.total_amount}`}</div>*/}\n            </div>\n        </div>\n    }\n}","import React, { Component } from \"react\";\nimport Card from './Card'\n\nexport default class CardList extends Component {\n    render() {\n        let displayed_cards = [];\n\n        this.props.setData.cards.forEach((card, card_index) => {\n            //if(card.current_playset_amount < 3) {\n                displayed_cards.push(<Card key={card_index} card={card}/>)\n            //}\n        })\n\n        return <div className='card-set'>\n            {displayed_cards}\n        </div>\n    }\n}","import React, { Component } from \"react\";\nimport SetHeader from './SetHeader'\nimport CardList from './CardList'\n\nexport default class Set extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    render() {\n        return <div>\n            <SetHeader setData={this.props.setData}/>\n            <CardList setData={this.props.setData}/>\n        </div>\n    }\n}","import React, { Component } from \"react\";\n\nexport default class FilterControls extends Component {\n    render() {\n        let sets = ['All'];\n        let rarities = ['All'];\n        this.props.cardData.forEach(set => {\n            sets.push(set.opus);\n            set.cards.forEach(card => {\n                card.quantities.forEach(quantity => {\n                    if (!rarities.includes(quantity.design_type))\n                    {\n                        rarities.push(quantity.design_type)\n                    }\n                })\n            })\n        })\n\n        return <div className='filter-options'>\n                <div className='filter-option'>\n                    <div className='filter-option-desc'>Set:</div>\n                    <ul className='filter-option-collection'>\n                        {sets.map(set_name =>\n                            <li className={`filter-option-item ${set_name === 'All' ? 'selected' : ''}`}  key={set_name}>{set_name}</li>)}\n                    </ul>\n                </div>\n                <div className='filter-option'>\n                    <div className='filter-option-desc'>Rarity:</div>\n                    <ul className='filter-option-collection'>\n                        {rarities.map(rarity =>\n                            <li className={`filter-option-item ${rarity === 'All' ? 'selected' : ''}`} key={rarity}>{rarity}</li>)}\n                    </ul>\n                </div>\n            </div>\n    }\n}","import React, { Component } from \"react\";\nimport Set from './Set'\nimport FilterControls from \"./FilterControls\";\n\nexport default class Results extends Component {\n    constructor(props) {\n        super(props);\n        this.handleScroll = this.handleScroll.bind(this)\n    }\n    componentDidMount() {\n        window.addEventListener('scroll', this.handleScroll);\n        document.documentElement.scrollTop = this.props.initialScrollPos;\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.handleScroll);\n    }\n\n    handleScroll(event) {\n        this.props.setScrollPos(event.target.scrollingElement.scrollTop);\n    }\n\n    sortedAndFilteredCardData = () => {\n        const sortAlphaNum = (a, b) => a.opus.localeCompare(b.opus, 'en', { numeric: true })\n        const sorted_card_data = this.props.cardData.sort(sortAlphaNum)\n        for(let i = 0; i < sorted_card_data.length; i++)\n        {\n            sorted_card_data[i].cards = sorted_card_data[i].cards.filter((card) => {\n                switch(this.props.displayMode) {\n                    case 'want':\n                        return card.current_playset_amount < 3;\n                    case 'trade':\n                        return card.current_playset_amount >= 3 && card.total_amount > card.current_playset_amount;\n                    case 'trade-down':\n                        return card.current_playset_amount > card.current_non_foil_playset_amount;\n                    default:\n                        return false;\n                }\n            })\n        }\n\n        return sorted_card_data;\n    }\n\n    render() {\n        return <div>\n            <FilterControls cardData={this.props.cardData}/>\n            {this.sortedAndFilteredCardData().map((set, index) => <Set setData={set} key={index}/>)}\n        </div>\n    }\n}","import React, { Component } from \"react\";\n\nexport default class WantTradeHeader extends Component {\n    headerItemClicked = (mode) => {\n        if (mode === this.props.displayMode) {\n            window.scroll({top: 0, left: 0, behavior: 'smooth' })\n        }\n        else {\n            this.props.changeDisplay(mode)\n        }\n    }\n    render() {\n        return <div className='want-trade-header'>\n            <div className={`header-option ${this.props.displayMode === 'want' ? 'selected-header' : ''}`} onClick={() => this.headerItemClicked('want')}>Want</div>\n            <div className={`header-option ${this.props.displayMode === 'trade' ? 'selected-header' : ''}`} onClick={() => this.headerItemClicked('trade')}>Trade</div>\n            <div className={`header-option ${this.props.displayMode === 'trade-down' ? 'selected-header' : ''}`} onClick={() => this.headerItemClicked('trade-down')}>Trade Down</div>\n        </div>\n    }\n}","import React, { Component } from \"react\";\nimport { readRemoteFile } from 'react-papaparse'\nimport FFDecksData from '../test_data/ffdecks';\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport Results from './Results'\nimport WantTradeHeader from './WantTradeHeader'\n\nexport default class Collection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            promo_card_data: null,\n            ffdecks_data: FFDecksData,\n            collection_data: null,\n            card_set_data: null,\n            display_mode: 'want',\n            scroll_pos: {\n                'want': 0,\n                'need': 0\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if((prevState.promo_card_data === null ||\n            prevState.ffdecks_data === null ||\n            prevState.collection_data === null) &&\n            this.state.promo_card_data !== null &&\n            this.state.ffdecks_data !== null &&\n            this.state.collection_data !== null)\n        {\n            let merged_data = [];\n            this.state.ffdecks_data.cards.forEach(card => {\n                let merged_card = {};\n                merged_card.name = card.name;\n                merged_card.image = card.image;\n                merged_card.serial = card.serial_number;\n                merged_card.serial += card.rarity !== 'Promo' ? card.rarity[0] : '';\n                merged_card.quantities = [];\n                merged_card.quantities.push({design_type: 'Regular', quantity: 0, playset_important: true})\n                merged_card.current_playset_amount = 0;\n                merged_card.current_non_foil_playset_amount = 0;\n                merged_card.opus = card.serial_number[1] === '-' ? card.serial_number[0] : card.serial_number.substring(0,2);\n                merged_data.push(merged_card);\n            })\n\n            // console.log(merged_data);\n\n            this.state.collection_data.forEach((row, index) => {\n                if(index > 0)\n                {\n                    let look_serial = row[1] + (row[2] !== 'Promo' ? row[2][0] : '');\n                    let existing_index = merged_data.findIndex(item => item.serial === look_serial)\n                    if(existing_index >= 0)\n                    {\n                        merged_data[existing_index].quantities[0].quantity = parseInt(row[3]);\n                        merged_data[existing_index].current_non_foil_playset_amount = Math.min(parseInt(row[3]), 3);\n\n                        merged_data[existing_index].quantities.push({design_type: 'Foil', quantity: parseInt(row[4]), playset_important: false})\n                    }\n                    else {\n                        console.log('missing serial from collection' + look_serial)\n                    }\n                }\n            })\n\n            this.state.promo_card_data.forEach((row, index) => {\n                if(index > 0)\n                {\n                    let look_serial = row[0];\n                    let existing_index = merged_data.findIndex(item => item.serial === look_serial)\n                    if(existing_index >= 0)\n                    {\n                        merged_data[existing_index].quantities.push({design_type: row[3], quantity: parseInt(row[1]), playset_important: false})\n                    }\n                    else {\n                        console.log('missing serial from promos' + look_serial)\n                        let merged_card = {};\n                        merged_card.name = row[2];\n                        merged_card.serial = row[0];\n                        merged_card.quantities = [];\n                        merged_card.quantities.push({design_type: 'Regular', quantity: 0, playset_important: true})\n                        merged_card.quantities.push({design_type: row[3], quantity: parseInt(row[1]), playset_important: false})\n                        merged_card.current_playset_amount = 0;\n                        merged_card.current_non_foil_playset_amount = 0;\n                        merged_card.opus = merged_card.serial[1] === '-' ? merged_card.serial[0] : merged_card.serial.substring(0,2);\n                        merged_data.push(merged_card);\n                    }\n                }\n            })\n\n            for(let i = 0; i < merged_data.length; i++)\n            {\n                merged_data[i].total_amount = merged_data[i].quantities.reduce((total, quantity) => total + quantity.quantity, 0)\n                merged_data[i].current_playset_amount = Math.min(3, merged_data[i].total_amount)\n            }\n\n            let card_set_data = []\n\n            merged_data.forEach(card => {\n                let existing_index = card_set_data.findIndex(item => item.opus === card.opus)\n\n                if(existing_index < 0)\n                {\n                    card_set_data.push({opus: card.opus, cards:[]})\n                    existing_index = card_set_data.length - 1;\n                }\n\n                card_set_data[existing_index].cards.push(card)\n            })\n\n            this.setState({card_set_data})\n        }\n    }\n\n    componentDidMount() {\n        readRemoteFile(\n            \"https://docs.google.com/spreadsheets/d/e/2PACX-1vTNKDBLs5ncNghesIYn2C4JlnJ5TZBNUmPZRsjAk9tyVxqoAcTs69QijdIo0Ys3_svdyCXwDlf814J5/pub?output=csv\",\n            {\n                complete: (results) => {\n                    this.setState({promo_card_data: results.data})\n                }\n            }\n        )\n        readRemoteFile(\n            \"https://docs.google.com/spreadsheets/d/e/2PACX-1vS5ZPsow9nzjVX6XP9ru1CRw6913D6RDrszOujy_TerRNWm17jXdf04u38YLscBfTS-35Ix4AUY85dk/pub?output=csv\",\n            {\n                complete: (results) => {\n                    this.setState({collection_data: results.data})\n                }\n            }\n        )\n        // fetch(\"http://ffdecks.com/api/cards/basic\")\n        //     .then(res => res.json())\n        //     .then(res => {\n        //             this.setState({ffdecks_data: res})\n        //             console.log('ffdecks_data_fetched')\n        //         }\n        //     )\n    }\n\n    setDisplayMode = (mode) => {\n        this.setState({display_mode: mode})\n    }\n\n    setScrollPos = (pos) => {\n        let scroll_data = {...this.state.scroll_pos};\n        scroll_data[this.state.display_mode] = pos;\n        this.setState({scroll_pos: scroll_data})\n    }\n\n    render() {\n        if(!!this.state.card_set_data) {\n            return <div style={{height:'100%'}}>\n                <WantTradeHeader changeDisplay={this.setDisplayMode} displayMode={this.state.display_mode}/>\n                {this.state.display_mode === 'want' && <Results setScrollPos={this.setScrollPos} initialScrollPos={this.state.scroll_pos['want']} cardData={this.state.card_set_data.filter((set) => set.opus === '1' || set.opus === '2')} displayMode={this.state.display_mode}/>}\n                {this.state.display_mode === 'trade' && <Results setScrollPos={this.setScrollPos} initialScrollPos={this.state.scroll_pos['trade']} cardData={this.state.card_set_data.filter((set) => set.opus === '3' || set.opus === '4')} displayMode={this.state.display_mode}/>}\n                {this.state.display_mode === 'trade-down' && <Results setScrollPos={this.setScrollPos} initialScrollPos={this.state.scroll_pos['trade-down']} cardData={this.state.card_set_data.filter((set) => set.opus === '5' || set.opus === '6')} displayMode={this.state.display_mode}/>}\n            </div>\n        }\n        else {\n            return <ClipLoader color={\"black\"} loading={true} size={150} />\n        }\n    }\n}","import './App.css';\nimport Collection from './components/Collection'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Collection/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}